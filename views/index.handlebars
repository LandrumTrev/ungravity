{{!-- ====================================================
UnGravity :: A workout checklist web app
MVC with MySQL, Node, Express, Handlebars and custom ORM.
Â©2018 Richard Trevillian
University of Richmond (Virginia)
Full Stack Developer Bootcamp (July 2018)
====================================================
INDEX.HANDLEBARS - BODY tag contents for root/index page
==================================================== --}}

<header id="top-bar" class="container-fluid">

    <div id="logotype" class="container">
        <span class="head-light font-weight-light">un</span><span class="head-bold font-weight-bold">gravity</span>
    </div>

</header>

<main class="container">

    {{!-- ADD NEW ITEM SECTION --}}
    <br>
    <h2 class="subhead">add</h2>
    <form class="create-form">
        <div class="form-group input-group mb-0">
            <input id="new-item" type="text" class="form-control" placeholder="Add a new item to the list" name="item">
            <div class="input-group-append">
                <button class="btn btn-danger btn-sm" type="submit" value="Submit">add item</button>
            </div>
        </div>
    </form>

    {{!-- TO-DO LIST SECTION --}}
    <br>
    <h2 class="subhead">to-do</h2>
    <ul class="list-group mb-0">
        {{!-- loop over res.render("index", hbsObject); from items_controller.js --}}
        {{#each items}}
        {{!-- include each item unless done: 1 (true), so include only done: 0 (false) --}}
        {{#unless done}}
        {{!-- use > to include partials/items/item-block.handlebars, which HTML formats each list item --}}
        {{!-- and AFTER including an item on the page, set its "done:" as "true"... --}}
        {{!-- which has the effect of making the item's data-newstatus="true"... --}}
        {{!-- so that true value can be grabbed and use to set the item's done: value in the database... --}}
        {{!-- by the .change-status button event handler in todolist.js --}}
        {{!-- NOTE this only happens AFTER list inclusion, so item is done: false for purpose of inclusion --}}
        {{> items/item-block done=true}}
        {{/unless}}
        {{/each}}
    </ul>

    {{!-- DONE LIST SECTION --}}
    <br>
    <h2 class="subhead">done</h2>
    <ul class="list-group mb-0">
        {{!-- loop over res.render("index", hbsObject); from items_controller.js --}}
        {{#each items}}
        {{!-- include each item if it is done: 1 (true) --}}
        {{#if done}}
        {{!-- use > to include partials/items/item-block.handlebars, which HTML formats each list item --}}
        {{!-- and AFTER including an item on the page, set its "done:" as "false"... --}}
        {{!-- which has the effect of making the item's data-newstatus="false"... --}}
        {{!-- so that false value can be grabbed and use to set the item's done: value in the database... --}}
        {{!-- by the .change-status button event handler in todolist.js --}}
        {{!-- NOTE this only happens AFTER list inclusion, so item is done: true for purpose of inclusion --}}
        {{> items/item-block done=false}}
        {{/if}}
        {{/each}}
    </ul>

</main>